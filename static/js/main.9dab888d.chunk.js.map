{"version":3,"sources":["ForcedGraph.jsx","ForceGraph/index.module.css","util.js","utils/content.js","utils/types.js","utils/structures.js","Restructure.jsx","FromCID.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["color","d3","graph","generating","props","svg","useRef","useState","chart","setChart","intervalId","setIntervalId","useEffect","domNode","attr","simulation","force","strength","id","d","distance","on","node","x","y","link","source","target","append","selectAll","Object","assign","update","nodes","links","old","Map","data","map","get","join","enter","alpha","restart","rezoom","bounds","getBBox","width","height","chartOn","current","clearInterval","setInterval","h","ref","module","exports","ipfs","ipfsClient","port","camelCase","str","sep","split","part","i","toUpperCase","slice","nodeToJSON","children","depth","left","right","json","name","localName","type","nodeType","Node","ELEMENT_NODE","TEXT_NODE","ATTRIBUTE_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","value","textContent","test","length","attributes","fromEntries","rule","val","trim","filter","e","some","t","keys","optDeref","a","CID","isCID","dag","cleanAttributes","attrs","entries","style","prop","class","className","buildDOM","root","key","onBuildStart","onBuildEnd","onDOMStart","onDOMFinish","onLeaf","Error","Promise","values","all","child","parent","sub","includes","dom","push","text","c","elem","React","createElement","console","error","parsererrorNS","DOMParser","parseFromString","getElementsByTagName","namespaceURI","isParseError","doc","getElementsByTagNameNS","getDoc","file","resolve","reject","reader","FileReader","onload","event","parser","xml","result","toString","html","firstChild","b","arraysEqual","Array","from","childNodes","n","head","body","list","typeOf","allOfType","readAsText","toTree","obj","leafFor","out","isArray","v","dfs","count","pre","step","nodeFor","childrenOf","forEach","ForcedGraph","loadable","isNum","maybe","fixViewBox","xmlns","w","viewBox","content","setContent","docTransforms","setGraph","setGenerating","status","setStatus","pid","cid","load","evt","files","btoa","documentElement","put","warn","message","align","direction","mt","listStyleType","_before","onChange","minH","maxW","fontSize","setDoc","useParams","URLSearchParams","useLocation","search","info","useCallback","grow","mr","as","placeholder","bg","ml","onKeyPress","document","forms","submit","_placeholder","theme","extendTheme","config","initialColorMode","styles","global","textDecoration","Link","to","RouterLink","basename","isOpen","isActive","Button","position","top","ChevronDown","Hamburger","title","path","component","FromCID","exact","Restructure","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","getElementById"],"mappings":"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","file":"static/js/main.9dab888d.chunk.js","sourcesContent":["import * as d3 from 'd3'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { chakra } from '@chakra-ui/react'\n\nconst color = d3.scaleOrdinal(d3.schemeTableau10)\n\nconst width = 640\nconst height = 480\n\nconst chartOn = (domNode) => {\n  const svg = (\n    d3.select(domNode)\n    .attr('viewBox', [-width / 2, -height / 2, width, height])\n    .attr('width', '100%')\n    .attr('height', '100%')\n  )\n  const simulation = (\n    d3.forceSimulation()\n    .force('charge', d3.forceManyBody().strength(-1000))\n    .force('link', d3.forceLink().id(d => d.id).distance(200))\n    .force('x', d3.forceX())\n    .force('y', d3.forceY())\n    .on('tick', ticked)\n  )\n  let link = (\n    svg.append('g')\n    .attr('stroke', '#000')\n    .attr('stroke-width', 1.5)\n    .selectAll('line')\n  )\n  let node = (\n    svg.append('g')\n    .attr('stroke', '#fff')\n    .attr('stroke-width', 1.5)\n    .selectAll('circle')\n  )\n\n  function ticked() {\n    node\n    .attr('cx', d => d.x)\n    .attr('cy', d => d.y)\n\n    link\n    .attr('x1', d => d.source.x)\n    .attr('y1', d => d.source.y)\n    .attr('x2', d => d.target.x)\n    .attr('y2', d => d.target.y)\n  }\n\n  const update = ({ nodes, links }) => {\n    // Make a shallow copy to protect against mutation, while\n    // recycling old nodes to preserve position and velocity.\n    //console.info({ nodes, links })\n    const old = new Map(node.data().map(d => [d.id, d]))\n    nodes = nodes.map(d => Object.assign(old.get(d.id) || {}, d))\n    links = links.map(d => Object.assign({}, d))\n\n    node = (\n      node.data(nodes, d => d.id)\n      .join((enter) => (\n        enter.append('circle')\n        .attr('r', 8)\n        .attr('fill', d => color(d.id))\n      ))\n    )\n    link = (\n      link.data(links, d => [d.source, d.target])\n      .join('line')\n    )\n\n    simulation.nodes(nodes)\n    simulation.force('link').links(links)\n    simulation.alpha(1).restart()\n  }\n\n  const rezoom = () => {\n    const bounds = svg.node().getBBox()\n    const { x, y, width, height } = bounds\n    svg.attr('viewBox', [x, y, width, height])\n  }\n\n  return Object.assign(svg.node(), { update, rezoom })\n}\n\nexport default ({\n  graph, generating = false, ...props\n}) => {\n  const svg = useRef()\n  const [chart, setChart] = useState()\n  const [intervalId, setIntervalId] = useState()\n\n  useEffect(() => {\n    setChart(chartOn(svg.current))\n  }, [])\n\n  useEffect(() => {\n    graph && chart?.update(graph)\n  }, [chart, graph])\n\n  useEffect(() => {\n    if(generating) {\n      if(intervalId) {\n        clearInterval(intervalId)\n      }\n      setIntervalId(\n        setInterval(() => chart.rezoom(), 100)\n      )\n    } else {\n      clearInterval(intervalId)\n    }\n  }, [chart, generating])\n\n  return (\n    <chakra.svg h=\"90vh\" {...props} ref={svg}/>\n  )\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ForceGraph_container__34z8t\",\"male\":\"ForceGraph_male__1U3Xg\",\"female\":\"ForceGraph_female__1NttJ\",\"node\":\"ForceGraph_node__lu7rX\",\"tooltip\":\"ForceGraph_tooltip__2DHDe\",\"contextMenu\":\"ForceGraph_contextMenu__1rSvB\",\"menuEntry\":\"ForceGraph_menuEntry__1JJ-k\"};","import ipfsClient from 'ipfs-http-client'\nimport React from 'react'\nimport CID from 'cids'\n\nexport const ipfs = ipfsClient({ port: 5001 })\n\nexport const toIPLD = async (obj) => {\n  return await ipfs.dag.put(obj)\n}\n\nexport const camelCase = (str, sep = '-') => (\n  str.split(sep)\n  .map((part, i) => {\n    if(i === 0) {\n      return part\n    } else {\n      return part[0].toUpperCase() + part.slice(1)\n    }\n  })\n  .join('')\n)\n\nexport const nodeToJSON = ({\n  node, children, depth, left, right\n}) => {\n  const json = {\n    name: node.localName, children,\n    depth, left, right,\n  }\n  json.type = ((() => {\n    switch(node.nodeType) {\n    case Node.ELEMENT_NODE: return 'element'\n    case Node.TEXT_NODE: return 'text'\n    case Node.ATTRIBUTE_NODE: return 'attribute'\n    case Node.CDATA_SECTION_NODE: return 'cdata'\n    case Node.ENTITY_REFERENCE_NODE: return 'reference'\n    case Node.ENTITY_NODE: return 'entity'\n    case Node.PROCESSING_INSTRUCTION_NODE: return 'instruction'\n    case Node.COMMENT_NODE: return 'comment'\n    case Node.DOCUMENT_NODE: return 'document'\n    case Node.DOCUMENT_TYPE_NODE: return 'doctype'\n    case Node.DOCUMENT_FRAGMENT_NODE: return 'fragment'\n    case Node.NOTATION_NODE: return 'notation'\n    default: return 'unknown'\n    }\n  })())\n  if(json.type === 'text' || json.type === 'cdata') {\n    delete json.name\n    json.value = node.textContent\n    if(/^\\n\\s*$/.test(json.value)) {\n      return null // Don't save inter-element whitespace\n    }\n  }\n  if(children.length === 0) {\n    delete json.children\n  }\n  json.attributes = Object.fromEntries(\n    [...node.attributes ?? []].map((attr) => {\n      let value = attr.value\n      if(attr.name === 'style') {\n        value = Object.fromEntries(\n          attr.value.split(';').map(\n            (rule) => {\n              const [name, ...val] = rule.split(':')\n              return [camelCase(name.trim()), val.join().trim()]\n            }\n          )\n          .filter(e => e.some(t => /\\S/.test(t)))\n        )\n      }\n      return [attr.name, value]\n    })\n  )\n  if(Object.keys(json.attributes).length === 0) {\n    delete json.attributes\n  }\n  return json\n}\n\n// Dereference a CID if the node is one\nconst optDeref = async (node) => {\n  if(CID.isCID(node)) {\n    return (await ipfs.dag.get(node)).value\n  }\n  return node\n}\n\nconst cleanAttributes = async (attributes) => {\n  attributes = await optDeref(attributes ?? {})\n\n  const attrs = {}\n  for(let [name, val] of Object.entries(attributes)) {\n    attrs[name] = await optDeref(val)\n  }\n\n  if(attrs.style) {\n    const style = {}\n    for(let [prop, val] of (\n      Object.entries(attrs.style)\n    )) {\n      style[camelCase(prop, '-')] = val\n    }\n    attrs.style = style\n  }\n\n  if(attrs.class) {\n    attrs.className = attrs.class\n    delete attrs.class\n  }\n  for(let attr of ['xml:space', 'xmlns:xlink', 'xlink:href']) {\n    if(attrs[attr]) {\n      attrs[camelCase(attr, ':')] = attrs[attr]\n      delete attrs[attr]\n    }\n  }\n  // ToDo: switch this to a blacklist & convert everything else\n  for(let attr of [\n    'flood-opacity', 'flood-color', 'stop-color',\n    'clip-rule', 'stroke-miterlimit', 'stroke-linejoin',\n    'stroke-linecap', 'stroke-width', 'clip-path',\n    'fill-rule',\n  ]) {\n    if(attrs[attr]) {\n      attrs[camelCase(attr, '-')] = attrs[attr]\n      delete attrs[attr]\n    }\n  }\n\n  return attrs\n}\n\nexport const buildDOM = async ({\n  root, key = { val: 0 },\n  onBuildStart = null, onBuildEnd = null,\n  onDOMStart = null, onDOMFinish = null,\n  onLeaf = null,\n}) => {\n  root = await optDeref(root)\n  if(root.type !== 'element') {\n    throw new Error(`Root Type: ${root.type}`)\n  }\n  if(root.depth === 1 && root.left === 1) {\n    onBuildStart?.({ root })\n  }\n  root.children = await Promise.all(\n    Object.values(\n      await optDeref(root.children ?? [])\n    )\n    .map(optDeref)\n  )\n  const children = []\n  for(let child of root.children) {\n    if(child.type === 'element') {\n      onDOMStart?.({ parent: root, child })\n      child.children = await Promise.all(\n        Object.values(\n          await optDeref(child.children ?? [])\n        )\n        .map(optDeref)\n      )\n      if(\n        child.children.length === 0\n        || child.children.some(\n          (sub) => (\n            !['text', 'cdata'].includes(sub.type)\n          )\n        )\n      ) {\n        // if there are non-text nodes, recurse\n        const dom = await (\n          buildDOM({\n            root: child, key,\n            onBuildStart, onBuildEnd,\n            onDOMStart, onDOMFinish,\n            onLeaf,\n          })\n        )\n        onDOMFinish?.({ parent: root, child, node: dom })\n        children.push(dom)\n      } else {\n        onLeaf?.({ parent: root, child })\n        // otherwise build a node\n        const attrs = await cleanAttributes(child.attributes)\n        attrs.key = ++key.val\n\n        const text = (\n          child.children.map(c => c.value).join()\n        )\n        const elem = (\n          React.createElement(child.name, attrs, text)\n        )\n        children.push(elem)\n      }\n    } else if(child.value && child.value.trim() !== '') {\n      console.error('Child', child.value)\n    }\n  }\n  const attrs = await cleanAttributes(root.attributes)\n  attrs.key = ++key.val\n  const elem = React.createElement(\n    root.name, attrs, children.length > 0 ? children : null\n  )\n  if(root.depth === 1 && root.left === 1) {\n    onBuildEnd?.(root, elem)\n  }\n  return elem\n}\n","import { arraysEqual, allOfType } from './types'\n\nexport const parsererrorNS = (() => (\n  (new DOMParser())\n  .parseFromString('INVALID', 'application/xml')\n  .getElementsByTagName('parsererror')[0]\n  .namespaceURI\n))()\n\nexport const isParseError = (doc) => (\n  doc.getElementsByTagNameNS(\n    parsererrorNS, 'parsererror'\n  ).length > 0\n)\n\n// Return the contents of a file returned from\n// a form input. It first tries as XML. If that\n// succeeds, the DOM is returned. Next HTML is\n// tried. Most files (txt, png, m4a, etc.) are\n// inserted into a simple HTML document. HTML\n// produces a DOM which is returned.\nexport const getDoc = (file) => (\n  new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onload = (event) => {\n      const parser = new DOMParser()\n      const xml = parser.parseFromString(\n        event.target.result.toString(), 'application/xml'\n      )\n      if(!isParseError(xml)) {\n        return resolve(xml)\n      }\n      const html = parser.parseFromString(\n        event.target.result.toString(), 'text/html'\n      )\n      if(isParseError(html)) {\n        return resolve(null)\n      }\n      // Browsers will wrap the contents of any\n      // file in a <html><head/><body>…</body></html>\n      // structure.\n      if(\n        html.firstChild.localName === 'html'\n        && arraysEqual(\n          Array.from(html.firstChild.childNodes)\n          .map(n => n.localName),\n          ['head', 'body'],\n        )\n      ) {\n        const head = html.firstChild.firstChild\n        const body = html.firstChild.childNodes[1]\n        if(\n          head.childNodes.length === 0\n          && allOfType(\n            body.childNodes, Node.TEXT_NODE\n          )\n        ) {\n          const text = (\n            Array.from(body.childNodes)\n            .map(n => n.textContent)\n            .join()\n          )\n          return resolve(text)\n        }\n        return resolve(html)\n      }\n    }\n    reader.readAsText(file)\n  })\n)\n","// Checks if all the elements in a list have the\n// same node type\nexport const allOfType = (\n  (list, type, typeOf = (n) => n.nodeType) => (\n    Array.from(list)\n    .all(n => typeOf(n) === type)\n  )\n)\n\nexport const arraysEqual = (a, b) => {\n  if(a === b) return true\n  if(a == null || b == null) return false\n  if(a.length !== b.length) return false\n\n  for(let i = 0; i < a.length; ++i) {\n    if(a[i] !== b[i]) return false\n  }\n  return true\n}\n","// Creates a sharded object where each level\n// is a separate document.\nexport const toTree = (\n  async ({\n    obj, leafFor = async (n) => n,\n  }) => {\n    const out = {}\n    await Promise.all(\n      Object.entries(obj).map(\n        async ([key, val]) => {\n          if(Array.isArray(val)) {\n            out[key] = await Promise.all(\n              val.map(async (v) => (\n                await toTree({ obj: v, leafFor })\n              ))\n            )\n          } else if(typeof val === 'object') {\n            out[key] = await toTree({ obj: val, leafFor })\n          } else {\n            out[key] = val\n          }\n        }\n      )\n    )\n    return await leafFor(out)\n  }\n)\n\n// Depth-first search\nexport const dfs = ({\n  node, depth = 1, count = { current: 1 },\n  pre = (..._) => {},\n  step = (..._) => {},\n  nodeFor = ({ node, ..._ }) => node,\n  childrenOf = (node) => Array.from(node.childNodes),\n}) => {\n  // SQL nested set model, \"right\" is count on exit\n  const left = count.current\n  pre(node, depth, left)\n  const children = []\n  childrenOf(node).forEach(\n    (child) => {\n      count.current++\n      const result = dfs({\n        node: child,\n        pre, step, nodeFor,\n        childrenOf,\n        depth: depth + 1, count,\n      })\n      if(result) {\n        children.push(result)\n        step({\n          node, children,\n          depth, left, right: count.current,\n        })\n      }\n    }\n  )\n  return nodeFor({\n    node, children,\n    depth, left, right: count.current,\n  })\n}\n","import loadable from '@loadable/component'\nimport {\n  Flex, ListItem, UnorderedList, Text, Box,\n  Input,\n} from '@chakra-ui/react'\nimport React, { useState } from 'react'\nimport {\n  nodeToJSON, buildDOM, ipfs,\n} from './util'\nimport { getDoc } from './utils/content'\nimport { dfs, toTree } from './utils/structures'\n\nconst ForcedGraph = loadable(() => import('./ForcedGraph'))\n//const DynGraph = loadable(() => import('./DynGraph'))\n\nconst isNum = (maybe) => (\n  /^(\\d+\\.?\\d*)|(\\d*\\.?\\d+)$/.test(maybe)\n)\n\nconst fixViewBox = (json) => {\n  // without this images won't fill the frame\n  if(json?.attributes?.xmlns === 'http://www.w3.org/2000/svg') {\n    const { width: w, height: h, viewBox: b } = (\n      json?.attributes\n    )\n    if(!b && isNum(w) && isNum(h)) {\n      json.attributes.viewBox = (\n        [0, 0, w, h].join(' ')\n      )\n    }\n    // ??= not supported by webpack\n    !w && (json.attributes.width = '100%')\n    !h && (json.attributes.height = '100%')\n  }\n}\n\nexport default () => {\n  const [content, setContent] = useState(null)\n  const docTransforms = [fixViewBox]\n  const [graph, setGraph] = (\n    useState({ nodes: [], links: []})\n  )\n  const [generating, setGenerating] = useState(false)\n  const [status, setStatus] = useState(null)\n  \n  const onBuildStart = ({ root }) => {\n    const id = `${root.left}:${root.right}`\n    const nodes = [{ id }]\n    const links = []\n    setGraph({ nodes, links })\n  }\n  const onDOMStart = ({ parent, child }) => {\n    const pid = `${parent.left}:${parent.right}`\n    const cid = `${child.left}:${child.right}`\n    setGraph(({ nodes = [], links = [] }) => ({\n      nodes: [\n        ...nodes,\n        { id: cid },\n      ],\n      links: [\n        ...links,\n        { source: pid, target: cid },\n      ],\n    }))\n  }\n  const load = async (evt) => {\n    setGenerating(true)\n    const files = evt.target.files\n    const name = evt.target.value\n\n    if(files.length === 0) {\n      throw new Error('No file is selected')\n    }\n\n    const doc = await getDoc(files[0])\n    if(doc === null) {\n      setContent(<h1><code>null</code> Document</h1>)\n    } else if(typeof doc === 'string') {\n      // eslint-disable-next-line no-control-regex\n      if(/\\x00/.test(doc)) {\n        setContent(\n          <object data={`data:;base64,${btoa(doc)}`}>\n            <p>This was the binary object: {name}</p>\n          </object>\n        )\n      } else {\n        setContent(<pre>{doc}</pre>)\n      }\n    } else {\n      const json = dfs({\n        node: doc.documentElement,\n        nodeFor: nodeToJSON,\n      })\n      try {\n        docTransforms.forEach(t => t(json))\n        const cid = await toTree({\n          obj: json,\n          leafFor: async (node) => (\n            await ipfs.dag.put(node)\n          ),\n        })\n        const root = (await ipfs.dag.get(cid)).value\n        setStatus(\n          <Text>CID for {name}: {cid.toString()}</Text>\n        )\n        const dom = await buildDOM({\n          root, onBuildStart, onDOMStart, onLeaf: onDOMStart,\n        })\n        setContent(dom)\n      } catch(err) {\n        console.warn('Error Building', err)\n        setContent(\n          <>\n            <Text>Unable to create object.</Text>\n            <Text>Error: <q>{err.message}</q></Text>\n            <Text>If the error is with fetching, try the CORS solution above.</Text>\n          </>\n        )\n      }\n    }\n    setGenerating(false)\n  }\n\n  return (\n    <Flex align=\"center\" direction=\"column\" mt={25}>\n      <Text>This program requires write access to an IPFS endpoint. If you want to use it from the web, you'll need to whitelist <code>dysbulic.github.io</code>.</Text>\n      <UnorderedList listStyleType=\"none\">\n        <ListItem _before={{ content: '\"$ \"' }}>ipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin '[\"http://localhost:3000\", \"http://localhost:5001\", \"https://webui.ipfs.io\", \"https://dysbulic.github.io\"]'</ListItem>\n        <ListItem _before={{ content: '\"$ \"' }}>ipfs config --json API.HTTPHeaders.Access-Control-Allow-Methods '[\"PUT\", \"POST\"]'</ListItem>\n      </UnorderedList>\n      <Input type=\"file\"\n        onChange={load}\n        minH=\"1.8em\" maxW={600} mt={6}\n        fontSize={30}\n      />\n      {status}\n      {content && (\n        <Box h=\"90vh\">\n          {content}\n        </Box>\n      )}\n      <ForcedGraph {...{ graph, generating }}/>\n    </Flex>\n  )\n}","import {\n  Flex, Input, Text, Box,\n} from '@chakra-ui/react'\nimport CID from 'cids';\nimport ForcedGraph from 'ForcedGraph';\nimport ForceGraph from 'ForceGraph';\nimport React, {\n  useEffect, useState, useCallback,\n} from 'react'\nimport { useParams } from 'react-router'\nimport { useLocation } from 'react-router-dom';\nimport { buildDOM } from './util';\n\nconst useQuery = () => (\n  new URLSearchParams(useLocation().search)\n)\n\nexport default () => {\n  const [doc, setDoc] = useState(null)\n  const [graph, setGraph] = (\n    useState({ nodes: [], links: []})\n  )\n  let { cid } = useParams()\n  if(!cid) {\n    cid = useQuery().get('cid')\n    console.info({ cid })\n  }\n\n  const onBuildStart = ({ root }) => {\n    const id = `${root.left}:${root.right}`\n    const nodes = [{ id }]\n    const links = []\n    setGraph({ nodes, links })\n  }\n  const onDOMStart = ({ parent, child }) => {\n    const pid = `${parent.left}:${parent.right}`\n    const cid = `${child.left}:${child.right}`\n    setGraph(({ nodes = [], links = [] }) => ({\n      nodes: [\n        ...nodes,\n        { id: cid },\n      ],\n      links: [\n        ...links,\n        { source: pid, target: cid },\n      ],\n    }))\n  }\n\n  const load = useCallback(\n    async () => {\n      if(cid) {\n        setDoc(await buildDOM({\n          root: new CID(cid),\n          onBuildStart, onDOMStart,\n          onLeaf: onDOMStart,\n        }))\n      }\n    }, [cid]\n  )\n  useEffect(() => { load() }, [load])\n\n  return (\n    <Flex direction=\"column\" align=\"center\">\n      {cid ? (\n        <>\n          <Text>Loading: {cid}</Text>\n          <Flex>\n            <ForcedGraph\n              {...{ graph }}\n              grow={1} mr={100}\n            />\n            {doc}\n          </Flex>\n        </>\n      ) : (\n        <Box as=\"form\" id=\"cid\">\n          <Input\n            name=\"cid\"\n            placeholder=\"IPFS Content ID\"\n            bg=\"white\"\n            color=\"black\"\n            ml={20} mt={6}\n            maxW=\"93%\"\n            onKeyPress={(evt) => {\n              if(evt.key === 'Enter') {\n                document.forms.cid.submit()\n              }\n            }}\n            _placeholder={{ color: '#333' }}\n          />\n        </Box>\n      )}\n    </Flex>\n  )\n}","import React from 'react'\nimport {\n  HashRouter as Router, Switch, Route,\n  Link as RouterLink,\n} from 'react-router-dom'\nimport {\n  ChakraProvider, extendTheme, Menu, MenuItem,\n  MenuButton, Button, MenuList, Link as ChakraLink,\n} from '@chakra-ui/react'\nimport {\n  ChevronDownIcon, HamburgerIcon\n} from \"@chakra-ui/icons\"\n//import { Provider } from 'react-redux'\nimport Restructure from './Restructure'\nimport FromCID from 'FromCID'\n\nconst overrides = {\n  config: {\n    initialColorMode: 'dark',\n  },\n  styles: {\n    global: {\n      body: {\n        minH: '100vh',\n      },\n      a: {\n        textDecoration: 'underline',\n      },\n    },\n  },\n}\nconst theme = extendTheme(overrides)\n\nconst Link = ({ children, to }) => (\n  <ChakraLink\n    as={RouterLink}\n    {...{ to }}\n    w='100%'\n  >{children}</ChakraLink>\n)\n\nexport default () => (\n  <ChakraProvider theme={theme}>\n    {/* <Provider store={store}> */}\n    <Router basename='/'>\n      <Menu>\n        {({ isOpen }) => (\n          <>\n            <MenuButton\n              isActive={isOpen} as={Button}\n              position='fixed' top='1rem' left='1rem'\n            >\n              {isOpen ? <ChevronDownIcon/> : <HamburgerIcon/>}\n            </MenuButton>\n            <MenuList>\n            <MenuItem>\n                <Link to='/'>🏡 Home</Link>\n              </MenuItem>\n              <MenuItem>\n                <Link to='/cid'>✍ By <acronym title=\"Content Identifier\">CID</acronym></Link>\n              </MenuItem>\n              <MenuItem>\n                <Link to='/about'>📰 About</Link>\n              </MenuItem>\n            </MenuList>\n          </>\n        )}\n      </Menu>\n      <Switch>\n      <Route path='/cid/' component={FromCID}/>\n      <Route path='/cid/:cid' component={FromCID}/>\n      <Route path='/' exact={false} component={Restructure}/>\n      </Switch>\n    </Router>\n  {/* </Provider> */}\n  </ChakraProvider>\n)","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}