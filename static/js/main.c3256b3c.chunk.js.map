{"version":3,"sources":["utils/dom.js","utils/content.js","utils/types.js","utils/structures.js","Restructure.jsx","FromCID.jsx","About.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["ipfs","ipfsClient","host","port","camelCase","str","sep","split","map","part","i","toUpperCase","slice","join","nodeToJSON","node","children","depth","left","right","json","name","localName","type","nodeType","Node","ELEMENT_NODE","TEXT_NODE","ATTRIBUTE_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","value","textContent","test","length","attributes","Object","fromEntries","attr","rule","val","trim","filter","e","some","t","keys","optDeref","a","CID","isCID","dag","get","cleanAttributes","attrs","entries","style","prop","class","className","buildDOM","root","key","onBuildStart","onBuildEnd","onDOMStart","onDOMFinish","onLeaf","Error","Promise","values","all","child","parent","dom","push","includes","console","error","elem","React","createElement","parsererrorNS","DOMParser","parseFromString","getElementsByTagName","namespaceURI","isParseError","doc","getElementsByTagNameNS","getDoc","file","resolve","reject","reader","FileReader","onload","event","parser","xml","target","result","toString","html","firstChild","b","arraysEqual","Array","from","childNodes","n","head","body","list","typeOf","allOfType","text","readAsText","toTree","obj","leafFor","out","isArray","v","dfs","count","current","pre","step","nodeFor","childrenOf","forEach","ForcedGraph","loadable","isNum","maybe","fixViewBox","xmlns","w","width","h","height","viewBox","useState","content","setContent","docTransforms","nodes","links","graph","setGraph","status","setStatus","id","pid","cid","source","load","evt","files","data","btoa","documentElement","put","warn","message","align","direction","mt","listStyleType","_before","onChange","minH","maxW","fontSize","maxH","history","setDoc","paramCID","useParams","queryCID","URLSearchParams","useLocation","search","formCID","setFormCID","startTime","setStartTime","endTime","setEndTime","performance","now","useCallback","cidObj","useEffect","time","toLocaleString","flexGrow","mr","as","onSubmit","placeholder","bg","color","ml","_placeholder","visibility","Link","to","RouterLink","Acronym","chakra","m","textIndent","textAlign","title","theme","extendTheme","config","initialColorMode","styles","global","textDecoration","basename","isOpen","isActive","Button","position","top","ChevronDown","Hamburger","path","exact","component","FromCID","About","Restructure","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.c3256b3c.chunk.js","sourcesContent":["import ipfsClient from 'ipfs-http-client'\nimport React from 'react'\nimport CID from 'cids'\n\nconst ipfs = (\n  ipfsClient({ host: 'ipfs.io', port: 443 })\n)\n\nexport const camelCase = (str, sep = '-') => (\n  str.split(sep)\n  .map((part, i) => {\n    if(i === 0) {\n      return part\n    } else {\n      return part[0].toUpperCase() + part.slice(1)\n    }\n  })\n  .join('')\n)\n\nexport const nodeToJSON = ({\n  node, children, depth, left, right\n}) => {\n  const json = {\n    name: node.localName, children,\n    depth, left, right,\n  }\n  json.type = ((() => {\n    switch(node.nodeType) {\n    case Node.ELEMENT_NODE: return 'element'\n    case Node.TEXT_NODE: return 'text'\n    case Node.ATTRIBUTE_NODE: return 'attribute'\n    case Node.CDATA_SECTION_NODE: return 'cdata'\n    case Node.ENTITY_REFERENCE_NODE: return 'reference'\n    case Node.ENTITY_NODE: return 'entity'\n    case Node.PROCESSING_INSTRUCTION_NODE: return 'instruction'\n    case Node.COMMENT_NODE: return 'comment'\n    case Node.DOCUMENT_NODE: return 'document'\n    case Node.DOCUMENT_TYPE_NODE: return 'doctype'\n    case Node.DOCUMENT_FRAGMENT_NODE: return 'fragment'\n    case Node.NOTATION_NODE: return 'notation'\n    default: return 'unknown'\n    }\n  })())\n  if(json.type === 'text' || json.type === 'cdata') {\n    delete json.name\n    json.value = node.textContent\n    if(/^\\n\\s*$/.test(json.value)) {\n      return null // Don't save inter-element whitespace\n    }\n  }\n  if(children.length === 0) {\n    delete json.children\n  }\n  json.attributes = Object.fromEntries(\n    [...node.attributes ?? []].map((attr) => {\n      let value = attr.value\n      if(attr.name === 'style') {\n        value = Object.fromEntries(\n          attr.value.split(';').map(\n            (rule) => {\n              const [name, ...val] = rule.split(':')\n              return [camelCase(name.trim()), val.join().trim()]\n            }\n          )\n          .filter(e => e.some(t => /\\S/.test(t)))\n        )\n      }\n      return [attr.name, value]\n    })\n  )\n  if(Object.keys(json.attributes).length === 0) {\n    delete json.attributes\n  }\n  return json\n}\n\n// Dereference a CID if the node is one\nconst optDeref = async (node) => {\n  if(CID.isCID(node)) {\n    return (await ipfs.dag.get(node)).value\n  }\n  return node\n}\n\nconst cleanAttributes = async (attributes) => {\n  attributes = await optDeref(attributes ?? {})\n\n  const attrs = {}\n  for(let [name, val] of Object.entries(attributes)) {\n    attrs[name] = await optDeref(val)\n  }\n\n  if(attrs.style) {\n    const style = {}\n    for(let [prop, val] of (\n      Object.entries(attrs.style)\n    )) {\n      style[camelCase(prop, '-')] = val\n    }\n    attrs.style = style\n  }\n\n  if(attrs.class) {\n    attrs.className = attrs.class\n    delete attrs.class\n  }\n  for(let attr of ['xml:space', 'xmlns:xlink', 'xlink:href']) {\n    if(attrs[attr]) {\n      attrs[camelCase(attr, ':')] = attrs[attr]\n      delete attrs[attr]\n    }\n  }\n  // ToDo: switch this to a blacklist & convert everything else\n  for(let attr of [\n    'flood-opacity', 'flood-color', 'stop-color',\n    'clip-rule', 'stroke-miterlimit', 'stroke-linejoin',\n    'stroke-linecap', 'stroke-width', 'clip-path',\n    'fill-rule', 'font-size', 'font-family',\n    'enable-background',\n  ]) {\n    if(attrs[attr]) {\n      attrs[camelCase(attr, '-')] = attrs[attr]\n      delete attrs[attr]\n    }\n  }\n\n  return attrs\n}\n\nexport const buildDOM = async ({\n  root, key = { val: 0 },\n  onBuildStart = null, onBuildEnd = null,\n  onDOMStart = null, onDOMFinish = null,\n  onLeaf = null,\n}) => {\n  root = await optDeref(root)\n  if(root.type !== 'element') {\n    throw new Error(`Root Type: ${root.type}`)\n  }\n  if(root.depth === 1 && root.left === 1) {\n    onBuildStart?.({ root })\n  }\n  root.children = await Promise.all(\n    Object.values(\n      await optDeref(root.children ?? [])\n    )\n    .map(optDeref)\n  )\n  const children = []\n  for(let child of root.children) {\n    if(child.type === 'element') {\n      onDOMStart?.({ parent: root, child })\n      child.children = await Promise.all(\n        Object.values(\n          await optDeref(child.children ?? [])\n        )\n        .map(optDeref)\n      )\n      const dom = await (\n        buildDOM({\n          root: child, key,\n          onBuildStart, onBuildEnd,\n          onDOMStart, onDOMFinish,\n          onLeaf,\n        })\n      )\n      onDOMFinish?.({ parent: root, child, node: dom })\n      children.push(dom)\n    } else if(['text', 'cdata'].includes(child.type)) {\n      onLeaf({ parent: root, child })\n      children.push(child.value)\n    } else if(child?.value?.trim() !== '') {\n      console.error('Child', child)\n    }\n  }\n  const attrs = await cleanAttributes(root.attributes)\n  attrs.key = ++key.val\n  const elem = React.createElement(\n    root.name, attrs, children.length > 0 ? children : null\n  )\n  if(root.depth === 1 && root.left === 1) {\n    onBuildEnd?.(root, elem)\n  }\n  return elem\n}\n","import { arraysEqual, allOfType } from './types'\n\nexport const parsererrorNS = (() => (\n  (new DOMParser())\n  .parseFromString('INVALID', 'application/xml')\n  .getElementsByTagName('parsererror')[0]\n  .namespaceURI\n))()\n\nexport const isParseError = (doc) => (\n  doc.getElementsByTagNameNS(\n    parsererrorNS, 'parsererror'\n  ).length > 0\n)\n\n// Return the contents of a file returned from\n// a form input. It first tries as XML. If that\n// succeeds, the DOM is returned. Next HTML is\n// tried. Most files (txt, png, m4a, etc.) are\n// inserted into a simple HTML document. HTML\n// produces a DOM which is returned.\nexport const getDoc = (file) => (\n  new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onload = (event) => {\n      const parser = new DOMParser()\n      const xml = parser.parseFromString(\n        event.target.result.toString(), 'application/xml'\n      )\n      if(!isParseError(xml)) {\n        return resolve(xml)\n      }\n      const html = parser.parseFromString(\n        event.target.result.toString(), 'text/html'\n      )\n      if(isParseError(html)) {\n        return resolve(null)\n      }\n      // Browsers will wrap the contents of any\n      // file in a <html><head/><body>…</body></html>\n      // structure.\n      if(\n        html.firstChild.localName === 'html'\n        && arraysEqual(\n          Array.from(html.firstChild.childNodes)\n          .map(n => n.localName),\n          ['head', 'body'],\n        )\n      ) {\n        const head = html.firstChild.firstChild\n        const body = html.firstChild.childNodes[1]\n        if(\n          head.childNodes.length === 0\n          && allOfType(\n            body.childNodes, Node.TEXT_NODE\n          )\n        ) {\n          const text = (\n            Array.from(body.childNodes)\n            .map(n => n.textContent)\n            .join()\n          )\n          return resolve(text)\n        }\n        return resolve(html)\n      }\n    }\n    reader.readAsText(file)\n  })\n)\n","// Checks if all the elements in a list have the\n// same node type\nexport const allOfType = (\n  (list, type, typeOf = (n) => n.nodeType) => (\n    Array.from(list)\n    .all(n => typeOf(n) === type)\n  )\n)\n\nexport const arraysEqual = (a, b) => {\n  if(a === b) return true\n  if(a == null || b == null) return false\n  if(a.length !== b.length) return false\n\n  for(let i = 0; i < a.length; ++i) {\n    if(a[i] !== b[i]) return false\n  }\n  return true\n}\n","// Creates a sharded object where each level\n// is a separate document.\nexport const toTree = (\n  async ({\n    obj, leafFor = async (n) => n,\n  }) => {\n    const out = {}\n    await Promise.all(\n      Object.entries(obj).map(\n        async ([key, val]) => {\n          if(Array.isArray(val)) {\n            out[key] = await Promise.all(\n              val.map(async (v) => (\n                await toTree({ obj: v, leafFor })\n              ))\n            )\n          } else if(typeof val === 'object') {\n            out[key] = await toTree({ obj: val, leafFor })\n          } else {\n            out[key] = val\n          }\n        }\n      )\n    )\n    return await leafFor(out)\n  }\n)\n\n// Depth-first search\nexport const dfs = ({\n  node, depth = 1, count = { current: 1 },\n  pre = (..._) => {},\n  step = (..._) => {},\n  nodeFor = ({ node, ..._ }) => node,\n  childrenOf = (node) => Array.from(node.childNodes),\n}) => {\n  // SQL nested set model, \"right\" is count on exit\n  const left = count.current\n  pre(node, depth, left)\n  const children = []\n  childrenOf(node).forEach(\n    (child) => {\n      count.current++\n      const result = dfs({\n        node: child,\n        pre, step, nodeFor,\n        childrenOf,\n        depth: depth + 1, count,\n      })\n      if(result) {\n        children.push(result)\n        step({\n          node, children,\n          depth, left, right: count.current,\n        })\n      }\n    }\n  )\n  return nodeFor({\n    node, children,\n    depth, left, right: count.current,\n  })\n}\n","import loadable from '@loadable/component'\nimport {\n  Flex, ListItem, UnorderedList, Text, Box,\n  Input,\n} from '@chakra-ui/react'\nimport React, { useState } from 'react'\nimport ipfsClient from 'ipfs-http-client'\nimport {\n  nodeToJSON, buildDOM,\n} from './utils/dom'\nimport { getDoc } from './utils/content'\nimport { dfs, toTree } from './utils/structures'\n\nconst ForcedGraph = loadable(() => import('./ForcedGraph'))\n//const DynGraph = loadable(() => import('./DynGraph'))\nexport const ipfs = (\n  ipfsClient({ host: 'localhost', port: 5001 })\n)\n\nconst isNum = (maybe) => (\n  /^(\\d+\\.?\\d*)|(\\d*\\.?\\d+)$/.test(maybe)\n)\n\nconst fixViewBox = (json) => {\n  // without this images won't fill the frame\n  if(\n    json?.attributes?.xmlns\n    === 'http://www.w3.org/2000/svg'\n  ) {\n    const { width: w, height: h, viewBox: b } = (\n      json?.attributes\n    )\n    if(!b && isNum(w) && isNum(h)) {\n      json.attributes.viewBox = (\n        [0, 0, w, h].join(' ')\n      )\n    }\n    // ??= not supported by webpack\n    !w && (json.attributes.width = '100%')\n    !h && (json.attributes.height = '100%')\n  }\n}\n\nexport default () => {\n  const [content, setContent] = useState(null)\n  const docTransforms = [fixViewBox]\n  const [graph, setGraph] = (\n    useState({ nodes: [], links: []})\n  )\n  const [status, setStatus] = useState(null)\n  \n  const onBuildStart = ({ root }) => {\n    const id = `${root.left}:${root.right}`\n    const nodes = [{ id }]\n    const links = []\n    setGraph({ nodes, links })\n  }\n  const onDOMStart = ({ parent, child }) => {\n    const pid = `${parent.left}:${parent.right}`\n    const cid = `${child.left}:${child.right}`\n    setGraph(({ nodes = [], links = [] }) => ({\n      nodes: [\n        ...nodes,\n        { id: cid },\n      ],\n      links: [\n        ...links,\n        { source: pid, target: cid },\n      ],\n    }))\n  }\n  const load = async (evt) => {\n    const files = evt.target.files\n    const name = evt.target.value\n\n    if(files.length === 0) {\n      throw new Error('No file is selected')\n    }\n\n    const doc = await getDoc(files[0])\n    if(doc === null) {\n      setContent(<h1><code>null</code> Document</h1>)\n    } else if(typeof doc === 'string') {\n      // eslint-disable-next-line no-control-regex\n      if(/\\x00/.test(doc)) {\n        setContent(\n          <object data={`data:;base64,${btoa(doc)}`}>\n            <p>This was the binary object: {name}</p>\n          </object>\n        )\n      } else {\n        setContent(<pre>{doc}</pre>)\n      }\n    } else {\n      const json = dfs({\n        node: doc.documentElement,\n        nodeFor: nodeToJSON,\n      })\n      try {\n        docTransforms.forEach(t => t(json))\n        const cid = await toTree({\n          obj: json,\n          leafFor: async (node) => (\n            await ipfs.dag.put(node)\n          ),\n        })\n        setStatus(\n          <Text>CID for {name}: {cid.toString()}</Text>\n        )\n        const dom = await buildDOM({\n          root: cid, onBuildStart, onDOMStart,\n          onLeaf: onDOMStart,\n        })\n        setContent(dom)\n      } catch(err) {\n        console.warn('Error Building', err)\n        setContent(\n          <>\n            <Text>Unable to create object.</Text>\n            <Text>Error: <q>{err.message}</q></Text>\n            <Text>If the error is with fetching, try the CORS solution above.</Text>\n          </>\n        )\n      }\n    }\n  }\n\n  return (\n    <Flex align=\"center\" direction=\"column\" mt={25}>\n      <Text>This program requires write access to an IPFS endpoint. If you want to use it from the web, you'll need to be running a node locally &amp; whitelist <code>dysbulic.github.io</code>.</Text>\n      <UnorderedList listStyleType=\"none\">\n        <ListItem _before={{ content: '\"$ \"' }}>ipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin '[\"http://localhost:3000\", \"http://localhost:5001\", \"https://webui.ipfs.io\", \"https://dysbulic.github.io\"]'</ListItem>\n        <ListItem _before={{ content: '\"$ \"' }}>ipfs config --json API.HTTPHeaders.Access-Control-Allow-Methods '[\"PUT\", \"POST\"]'</ListItem>\n      </UnorderedList>\n      <Input type=\"file\"\n        onChange={load}\n        minH=\"1.8em\" maxW={600} mt={6}\n        fontSize={30}\n      />\n      {status}\n      {content && (\n        <Box h=\"90vh\" w=\"100%\">\n          {content}\n        </Box>\n      )}\n      <ForcedGraph maxH=\"90vh\" {...{ graph }}/>\n    </Flex>\n  )\n}","import {\n  Flex, Input, Text, Box,\n} from '@chakra-ui/react'\nimport loadable from '@loadable/component'\nimport CID from 'cids'\nimport React, {\n  useEffect, useState, useCallback,\n} from 'react'\nimport { useParams } from 'react-router'\nimport { useLocation } from 'react-router-dom'\nimport { buildDOM } from './utils/dom'\n\nconst ForcedGraph = loadable(() => import('./ForcedGraph'))\n\nconst useQuery = () => (\n  new URLSearchParams(useLocation().search)\n)\n\nexport default ({ history }) => {\n  const [doc, setDoc] = useState(null)\n  const [graph, setGraph] = (\n    useState({ nodes: [], links: []})\n  )\n  const { cid: paramCID } = useParams()\n  const queryCID = useQuery().get('cid')\n  const cid = paramCID ?? queryCID\n  const [formCID, setFormCID] = useState('')\n  const [startTime, setStartTime] = useState(0)\n  const [endTime, setEndTime] = useState(0)\n\n  const onBuildStart = ({ root }) => {\n    const id = `${root.left}:${root.right}`\n    const nodes = [{ id }]\n    const links = []\n    setDoc(null)\n    setGraph({ nodes, links })\n    setStartTime(performance.now())\n    setEndTime(null)\n  }\n  const onDOMStart = ({ parent, child }) => {\n    const pid = `${parent.left}:${parent.right}`\n    const cid = `${child.left}:${child.right}`\n    setGraph(({ nodes = [], links = [] }) => ({\n      nodes: [\n        ...nodes,\n        { id: cid },\n      ],\n      links: [\n        ...links,\n        { source: pid, target: cid },\n      ],\n    }))\n  }\n  const onBuildEnd = () => {\n    setEndTime(performance.now())\n  }\n  const onSubmit = () => {\n    history.push(`/cid/${formCID}`)\n  }\n\n  const load = useCallback(\n    async () => {\n      try {\n        const cidObj = new CID(cid)\n        if(cidObj) {\n          setDoc(await buildDOM({\n            root: cidObj,\n            onBuildStart, onDOMStart,\n            onLeaf: onDOMStart,\n            onBuildEnd,\n          }))\n        }\n      } catch(err) {\n        if(cid) {\n          console.warn('Load Error', err)\n        }\n      }\n    }, [cid]\n  )\n  useEffect(() => { load() }, [load])\n\n  const time = (\n    (endTime ?? performance.now()) - (startTime ?? 0)\n  )\n\n  return (\n    <Flex direction=\"column\" align=\"center\">\n      {cid ? (\n        <>\n          <Text>Loading: {cid} ({time.toLocaleString()}ms)</Text>\n          <Flex w=\"100%\" h=\"90vh\">\n            <ForcedGraph\n              {...{ graph }}\n              flexGrow={1} mr={100}\n            />\n            {doc}\n          </Flex>\n        </>\n      ) : (\n        <Box as=\"form\" id=\"cid\" w=\"100%\" {...{ onSubmit }}>\n          <Input\n            value={formCID ?? ''}\n            onChange={\n              (evt) => setFormCID(evt.target.value)\n            }\n            placeholder=\"IPFS Content ID\"\n            bg=\"white\"\n            color=\"black\"\n            ml={20} mt={6}\n            maxW=\"93%\"\n            _placeholder={{ color: '#333' }}\n          />\n          <Input type=\"submit\" visibility=\"hidden\"/>\n        </Box>\n      )}\n    </Flex>\n  )\n}","import {\n  Flex, Heading, ListItem, Text, UnorderedList,\n  Link as ChakraLink, chakra,\n} from '@chakra-ui/react'\nimport React from 'react'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst Link = ({ children, to }) => (\n  <ChakraLink\n    as={RouterLink}\n    {...{ to }}\n  >{children}</ChakraLink>\n)\n\nconst Acronym = chakra('acronym')\n\nexport default () => (\n  <Flex\n    maxW=\"50rem\" m=\"auto\" fontSize={20} direction=\"column\" align=\"center\"\n  >\n    <Heading m={10}>XML to IPLD Converter</Heading>\n    <Text style={{ textIndent: 25, textAlign: 'justify' }}>This program takes an XML document, converts it into an <Acronym title=\"Interplanetary Filesystem\">IPFS</Acronym> <Acronym title=\"Directed Acyclic Graph\">DAG</Acronym> representing the <Acronym title=\"Document Object Model\">DOM</Acronym> where each node is a separate document linked to the others by <Acronym title=\"Content Identifier\">CID</Acronym>s. The program then walks the <Acronym title=\"Common Binary Object Representation\">CBOR</Acronym> structure and rebuilds the DOM tree.</Text>\n    <Text style={{ textIndent: 25, textAlign: 'justify' }} mt={5}>This method of storage has some interesting properties having to do with reusing unchanged subgraphs &amp; minimizing document size. The question was how long will it take to load, thus this program.</Text>\n    <Flex w=\"100%\" align=\"flex-start\" direction=\"column\">\n      <Text mt={5}>Examples:</Text>\n      <UnorderedList>\n        <ListItem><Link to=\"/cid/bafyreiadbcuiiwmdhzca2ajxwjgguwjyidujex2ptfu77rpidyt65lsm5e\">Gazoo</Link> <i>(~20 nodes)</i></ListItem>\n        <ListItem><Link to=\"/cid/bafyreibu2ase2fvphe47yjfiebtvvx236f4pbgqzgraayyd2bfszekldzi\">MetaGame Flag</Link> <i>(~30 nodes)</i></ListItem>\n        <ListItem><Link to=\"/cid/bafyreif645kruyhewydqwyjpor6z24mu3dzj2jsi6f2w57xoxcmnlf4ypa\">Linux Fox</Link> <i>(~150 nodes)</i></ListItem>\n        <ListItem><Link to=\"/cid/bafyreihqodbfy47utwfqyxnmsxpxgs5p3g5opcqnilor6flt3lwhksxrsu\">Chakras</Link> <i>(1000+ nodes)</i></ListItem>\n      </UnorderedList>\n    </Flex>\n  </Flex>\n)","import React from 'react'\nimport {\n  HashRouter as Router, Switch, Route,\n  Link as RouterLink,\n} from 'react-router-dom'\nimport {\n  ChakraProvider, extendTheme, Menu, MenuItem,\n  MenuButton, Button, MenuList, Link as ChakraLink,\n} from '@chakra-ui/react'\nimport {\n  ChevronDownIcon, HamburgerIcon\n} from \"@chakra-ui/icons\"\n//import { Provider } from 'react-redux'\nimport Restructure from './Restructure'\nimport FromCID from './FromCID'\nimport About from './About'\n\nconst overrides = {\n  config: {\n    initialColorMode: 'dark',\n  },\n  styles: {\n    global: {\n      body: {\n        minH: '100vh',\n      },\n      a: {\n        textDecoration: 'underline',\n      },\n    },\n  },\n}\nconst theme = extendTheme(overrides)\n\nconst Link = ({ children, to }) => (\n  <ChakraLink\n    as={RouterLink}\n    {...{ to }}\n    w='100%'\n  >{children}</ChakraLink>\n)\n\nexport default () => (\n  <ChakraProvider theme={theme}>\n    {/* <Provider store={store}> */}\n    <Router basename='/'>\n      <Menu>\n        {({ isOpen }) => (\n          <>\n            <MenuButton\n              isActive={isOpen} as={Button}\n              position='fixed' top='1rem' left='1rem'\n            >\n              {isOpen ? <ChevronDownIcon/> : <HamburgerIcon/>}\n            </MenuButton>\n            <MenuList>\n            <MenuItem>\n                <Link to='/'>🏡 Home</Link>\n              </MenuItem>\n              <MenuItem>\n                <Link to='/cid'>✍ By <acronym title=\"Content Identifier\">CID</acronym></Link>\n              </MenuItem>\n              <MenuItem>\n                <Link to='/about'>📰 About</Link>\n              </MenuItem>\n            </MenuList>\n          </>\n        )}\n      </Menu>\n      <Switch>\n      <Route\n        path='/cid/:cid?'\n        exact={false}\n        component={FromCID}\n      />\n      <Route path='/about' component={About}/>\n      <Route path='/' exact={false} component={Restructure}/>\n      </Switch>\n    </Router>\n  {/* </Provider> */}\n  </ChakraProvider>\n)","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}