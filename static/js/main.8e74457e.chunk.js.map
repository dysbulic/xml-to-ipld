{"version":3,"sources":["util.js","App.jsx","reportWebVitals.js","index.js"],"names":["parsererrorNS","DOMParser","parseFromString","getElementsByTagName","namespaceURI","isParseError","doc","getElementsByTagNameNS","length","getDoc","file","Promise","resolve","reject","reader","FileReader","onload","event","list","type","parser","xml","target","result","html","a","b","i","arraysEqual","Array","from","firstChild","childNodes","map","n","localName","head","body","Node","TEXT_NODE","nodeType","reduce","acc","t","text","textContent","join","console","info","readAsText","domDFS","node","func","depth","child","filter","nodeToJSON","children","json","name","ELEMENT_NODE","ATTRIBUTE_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","value","test","attributes","Object","fromEntries","attr","useState","content","setContent","load","evt","files","warn","data","btoa","documentElement","nodeName","align","direction","mt","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e74457e.chunk.js","sourcesContent":["export const arraysEqual = (a, b) => {\n  if(a === b) return true\n  if(a == null || b == null) return false\n  if(a.length !== b.length) return false\n\n  for(let i = 0; i < a.length; ++i) {\n    if(a[i] !== b[i]) return false\n  }\n  return true\n}\n\nexport const parsererrorNS = (() => (\n  (new DOMParser())\n  .parseFromString('INVALID', 'application/xml')\n  .getElementsByTagName('parsererror')[0]\n  .namespaceURI\n))()\n\nexport const isParseError = (doc) => (\n  doc.getElementsByTagNameNS(\n    parsererrorNS, 'parsererror'\n  ).length > 0\n)\n\n// Checks if all the elements in a list have the\n// same node type\nexport const allOfType = (list, type) => (\n  Array.from(list)\n  .map(n => n.nodeType)\n  .reduce((acc, t) => acc && t === type, true)\n)\n\nexport const getDoc = (file) => (\n  new Promise((resolve, reject) => {\n    const reader = new FileReader()\n    reader.onload = (event) => {\n      const parser = new DOMParser()\n      const xml = parser.parseFromString(\n        event.target.result, 'application/xml'\n      )\n      if(!isParseError(xml)) {\n        console.info('XML', xml, isParseError(xml))\n        resolve(xml)\n      } else {\n        const html = parser.parseFromString(\n          event.target.result, 'text/html'\n        )\n        if(isParseError(html)) {\n          resolve(null)\n        } else if(\n          arraysEqual(\n            Array.from(html.firstChild.childNodes)\n            .map(n => n.localName),\n            ['head', 'body'],\n          )\n        ) {\n          const head = html.firstChild.firstChild\n          const body = html.firstChild.childNodes[1]\n          if(\n            head.childNodes.length === 0\n            && allOfType(\n              body.childNodes, Node.TEXT_NODE\n            )\n          ) {\n            const text = (\n              Array.from(body.childNodes)\n              .map(n => n.textContent)\n              .join()\n            )\n            resolve(text)\n          } else {\n            resolve(html)\n          }\n        } else {\n          resolve(html)\n        }\n      }\n    }\n\n    console.info('t', reader.readAsText(file))\n  })\n)\n\nexport const domDFS = (node, func, depth = 1) => {\n  const result = (\n    Array.from(node.childNodes)\n    .map(child => domDFS(child, func, depth + 1))\n    .filter(n => !!n)\n  )\n  return func(node, result)\n}\n\nexport const nodeToJSON = (node, children) => {\n  const json = {\n    name: node.localName, children,\n  }\n  json.type = ((() => {\n    switch(node.nodeType) {\n    case Node.ELEMENT_NODE: return 'element'\n    case Node.TEXT_NODE: return 'text'\n    case Node.ATTRIBUTE_NODE: return 'attribute'\n    case Node.CDATA_SECTION_NODE: return 'cdata'\n    case Node.ENTITY_REFERENCE_NODE: return 'reference'\n    case Node.ENTITY_NODE: return 'entity'\n    case Node.PROCESSING_INSTRUCTION_NODE: return 'instruction'\n    case Node.COMMENT_NODE: return 'comment'\n    case Node.DOCUMENT_NODE: return 'document'\n    case Node.DOCUMENT_TYPE_NODE: return 'doctype'\n    case Node.DOCUMENT_FRAGMENT_NODE: return 'fragment'\n    case Node.NOTATION_NODE: return 'notation'\n    default: return 'unknown'\n    }\n  })())\n  if(json.type === 'text') {\n    delete json.name\n    json.value = node.textContent\n    if(/^\\n\\s*$/.test(json.value)) {\n      return null // Don't save interelement whitespace\n    }\n  }\n  json.attributes = Object.fromEntries(\n    [...node.attributes ?? []].map((attr) => (\n      [attr.name, attr.value]\n    ))\n  )\n  return json\n}","import { Flex } from '@chakra-ui/react'\nimport { useState } from 'react'\nimport { getDoc, domDFS, nodeToJSON } from './util'\nimport './App.css';\n\nexport default () => {\n  const [content, setContent] = useState(null)\n\n  const load = async (evt) => {\n    const files = evt.target.files\n    const name = evt.target.value\n\n    if(files.length === 0) {\n      console.warn('No file is selected')\n      return\n    }\n\n    const doc = await getDoc(files[0])\n    console.info('DD', doc)\n    if(doc === null) {\n      setContent(<h1>null Document</h1>)\n    } else if(typeof doc === 'string') {\n      // eslint-disable-next-line no-control-regex\n      if(/\\x00/.test(doc)) {\n        setContent(\n          <object data={`data:;base64,${btoa(doc)}`}>\n            <p>This was the binary object: {name}</p>\n          </object>\n        )\n      } else {\n        setContent(<pre>{doc}</pre>)\n      }\n    } else {\n      const json = domDFS(\n        doc.documentElement, nodeToJSON,\n      )\n      console.info('JSON', json)\n      setContent(<h1>Doc {doc.nodeName}</h1>)\n    }\n  }\n\n  return (\n    <Flex align=\"center\" direction=\"column\" mt={25}>\n      <input type=\"file\" onChange={load}/>\n      {content}\n    </Flex>\n  )\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}